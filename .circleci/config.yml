version: 2.1
jobs:
  build:
    docker:
      - image: cimg/ruby:2.7.4-node
    environment:
      BUNDLE_PATH: ~/repo/vendor/bundle
    steps:
      - checkout
      - restore_cache:
          keys:
            - rubygems-v1-{{ checksum "Gemfile.lock" }}
            - rubygems-v1-fallback
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: rubygems-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Install node dependencies
          command: yarn
      - run:
          name: Install aws cli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install -i ~/.local/aws-cli -b ~/.local/bin/
            aws --version
      - run:
          name: Copy environment variables
          command: aws s3 cp s3://ussd.directory.env/stage/.env .
      - run:
          name: Build react scripts
          command: yarn build
      - run:
          name: Jekyll build
          command: bundle exec jekyll build
      - persist_to_workspace:
          root: ./
          paths:
            - _site
  deploy-staging:
    docker:
      - image: cimg/python:3.9.1
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Install AWS CLI
          command: pip install awscli --upgrade --user
      - run:
          name: Upload to s3
          command: ~/.local/bin/aws s3 sync ./_site s3://$AWS_S3_STAGE_BUCKET_NAME/ --delete --acl public-read --delete --cache-control max-age=604800
      - run:
          name: Create AWS Cloudfront Invalidation
          command: ~/.local/bin/aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_STAGE_DISTRIBUTION_ID --paths "/*"
  deploy-production:
    docker:
      - image: cimg/python:3.9.1
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Install AWS CLI
          command: pip install awscli --upgrade --user
      - run:
          name: Upload to s3
          command: ~/.local/bin/aws s3 sync ./_site s3://$AWS_S3_PROD_BUCKET_NAME/ --delete --acl public-read --delete --cache-control max-age=604800
      - run:
          name: Create AWS Cloudfront Invalidation
          command: ~/.local/bin/aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_PROD_DISTRIBUTION_ID --paths "/*"
workflows:
  test-deploy:
    jobs:
      - build
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: staging
  test-deploy-prod:
    jobs:
      - build
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: main